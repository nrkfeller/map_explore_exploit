using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ME2_Test
{
    class Individual
    {
        public List<object> Genotype = new List<object>();
        public double Fitness { get; set; }
        public object this[int Index]
        {
            get
            {
                if(Index < 0 || Index > Genotype.Count - 1)
                {
                    throw new IndexOutOfRangeException("Individual.this[]: Index must be between 0 and " + (Genotype.Count - 1).ToString());
                }
                return Genotype[Index];
            }
            set
            {
                if (Index < 0 || Index > Genotype.Count - 1)
                {
                    throw new IndexOutOfRangeException("Individual.this[]: Index must be between 0 and " + (Genotype.Count - 1).ToString());
                }
                Genotype[Index] = value;
            }
        }
        public int Size { get { return this.Genotype.Count; } }
        public double MutationStep { get; set; }
        public double MutationProbability { get; set; }
        public override string ToString()
        {
            string fitnessText = "Fitness: " + this.Fitness.ToString("#.0000") + "\n";
            string genotypeText = "Genotype: [ ";
            for (int i = 0; i < this.Size; i++)
            {
                if (this[i] is double)
                {
                    genotypeText += ((double)this[i]).ToString("#.0000");
                }
                else
                {
                    genotypeText += this[i].ToString();
                }
                if (i == this.Size - 1)
                {
                    genotypeText += " ]";
                }
                else
                {
                    genotypeText += " | ";
                }
            }
            genotypeText += "\n";
            string parameterText = "Mutation Step: " + this.MutationStep + "\nMutation Probability: " + this.MutationProbability + "\n";

            return fitnessText + genotypeText + parameterText;
        }
    }
}
